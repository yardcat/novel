// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: event/world.proto

package event

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Difficuty     string                 `protobuf:"bytes,1,opt,name=difficuty,proto3" json:"difficuty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartCardRequest) Reset() {
	*x = StartCardRequest{}
	mi := &file_event_world_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCardRequest) ProtoMessage() {}

func (x *StartCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_world_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCardRequest.ProtoReflect.Descriptor instead.
func (*StartCardRequest) Descriptor() ([]byte, []int) {
	return file_event_world_proto_rawDescGZIP(), []int{0}
}

func (x *StartCardRequest) GetDifficuty() string {
	if x != nil {
		return x.Difficuty
	}
	return ""
}

type StartCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Choices       []string               `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartCardResponse) Reset() {
	*x = StartCardResponse{}
	mi := &file_event_world_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCardResponse) ProtoMessage() {}

func (x *StartCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_world_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCardResponse.ProtoReflect.Descriptor instead.
func (*StartCardResponse) Descriptor() ([]byte, []int) {
	return file_event_world_proto_rawDescGZIP(), []int{1}
}

func (x *StartCardResponse) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

var File_event_world_proto protoreflect.FileDescriptor

const file_event_world_proto_rawDesc = "" +
	"\n" +
	"\x11event/world.proto\x12\x05event\"0\n" +
	"\x10startCardRequest\x12\x1c\n" +
	"\tdifficuty\x18\x01 \x01(\tR\tdifficuty\"-\n" +
	"\x11startCardResponse\x12\x18\n" +
	"\achoices\x18\x01 \x03(\tR\achoices2G\n" +
	"\x05world\x12>\n" +
	"\tstartCard\x12\x17.event.startCardRequest\x1a\x18.event.startCardResponseB\tZ\a./eventb\x06proto3"

var (
	file_event_world_proto_rawDescOnce sync.Once
	file_event_world_proto_rawDescData []byte
)

func file_event_world_proto_rawDescGZIP() []byte {
	file_event_world_proto_rawDescOnce.Do(func() {
		file_event_world_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_world_proto_rawDesc), len(file_event_world_proto_rawDesc)))
	})
	return file_event_world_proto_rawDescData
}

var file_event_world_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_event_world_proto_goTypes = []any{
	(*StartCardRequest)(nil),  // 0: event.startCardRequest
	(*StartCardResponse)(nil), // 1: event.startCardResponse
}
var file_event_world_proto_depIdxs = []int32{
	0, // 0: event.world.startCard:input_type -> event.startCardRequest
	1, // 1: event.world.startCard:output_type -> event.startCardResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_event_world_proto_init() }
func file_event_world_proto_init() {
	if File_event_world_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_world_proto_rawDesc), len(file_event_world_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_world_proto_goTypes,
		DependencyIndexes: file_event_world_proto_depIdxs,
		MessageInfos:      file_event_world_proto_msgTypes,
	}.Build()
	File_event_world_proto = out.File
	file_event_world_proto_goTypes = nil
	file_event_world_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorldClient is the client API for World service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldClient interface {
	StartCard(ctx context.Context, in *StartCardRequest, opts ...grpc.CallOption) (*StartCardResponse, error)
}

type worldClient struct {
	cc grpc.ClientConnInterface
}

func NewWorldClient(cc grpc.ClientConnInterface) WorldClient {
	return &worldClient{cc}
}

func (c *worldClient) StartCard(ctx context.Context, in *StartCardRequest, opts ...grpc.CallOption) (*StartCardResponse, error) {
	out := new(StartCardResponse)
	err := c.cc.Invoke(ctx, "/event.world/startCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorldServer is the server API for World service.
type WorldServer interface {
	StartCard(context.Context, *StartCardRequest) (*StartCardResponse, error)
}

// UnimplementedWorldServer can be embedded to have forward compatible implementations.
type UnimplementedWorldServer struct {
}

func (*UnimplementedWorldServer) StartCard(context.Context, *StartCardRequest) (*StartCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartCard not implemented")
}

func RegisterWorldServer(s *grpc.Server, srv WorldServer) {
	s.RegisterService(&_World_serviceDesc, srv)
}

func _World_StartCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).StartCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.world/StartCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).StartCard(ctx, req.(*StartCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _World_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.world",
	HandlerType: (*WorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "startCard",
			Handler:    _World_StartCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event/world.proto",
}
