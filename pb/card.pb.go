// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: pb/card.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WelcomeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         string                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WelcomeRequest) Reset() {
	*x = WelcomeRequest{}
	mi := &file_pb_card_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WelcomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeRequest) ProtoMessage() {}

func (x *WelcomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeRequest.ProtoReflect.Descriptor instead.
func (*WelcomeRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{0}
}

func (x *WelcomeRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

type WelcomeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WelcomeResponse) Reset() {
	*x = WelcomeResponse{}
	mi := &file_pb_card_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WelcomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeResponse) ProtoMessage() {}

func (x *WelcomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeResponse.ProtoReflect.Descriptor instead.
func (*WelcomeResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{1}
}

func (x *WelcomeResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SendCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []int32                `protobuf:"varint,1,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	Target        int32                  `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCardRequest) Reset() {
	*x = SendCardRequest{}
	mi := &file_pb_card_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardRequest) ProtoMessage() {}

func (x *SendCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardRequest.ProtoReflect.Descriptor instead.
func (*SendCardRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{2}
}

func (x *SendCardRequest) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SendCardRequest) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type SendCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCardResponse) Reset() {
	*x = SendCardResponse{}
	mi := &file_pb_card_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardResponse) ProtoMessage() {}

func (x *SendCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardResponse.ProtoReflect.Descriptor instead.
func (*SendCardResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{3}
}

func (x *SendCardResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DiscardCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []int32                `protobuf:"varint,1,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscardCardRequest) Reset() {
	*x = DiscardCardRequest{}
	mi := &file_pb_card_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscardCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardCardRequest) ProtoMessage() {}

func (x *DiscardCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardCardRequest.ProtoReflect.Descriptor instead.
func (*DiscardCardRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{4}
}

func (x *DiscardCardRequest) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

type DiscardCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscardCardResponse) Reset() {
	*x = DiscardCardResponse{}
	mi := &file_pb_card_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscardCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardCardResponse) ProtoMessage() {}

func (x *DiscardCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardCardResponse.ProtoReflect.Descriptor instead.
func (*DiscardCardResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{5}
}

func (x *DiscardCardResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ShowDrawCardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowDrawCardsRequest) Reset() {
	*x = ShowDrawCardsRequest{}
	mi := &file_pb_card_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowDrawCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDrawCardsRequest) ProtoMessage() {}

func (x *ShowDrawCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDrawCardsRequest.ProtoReflect.Descriptor instead.
func (*ShowDrawCardsRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{6}
}

type ShowDrawCardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []string               `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowDrawCardsResponse) Reset() {
	*x = ShowDrawCardsResponse{}
	mi := &file_pb_card_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowDrawCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDrawCardsResponse) ProtoMessage() {}

func (x *ShowDrawCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDrawCardsResponse.ProtoReflect.Descriptor instead.
func (*ShowDrawCardsResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{7}
}

func (x *ShowDrawCardsResponse) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ShowDiscardCardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowDiscardCardsRequest) Reset() {
	*x = ShowDiscardCardsRequest{}
	mi := &file_pb_card_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowDiscardCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDiscardCardsRequest) ProtoMessage() {}

func (x *ShowDiscardCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDiscardCardsRequest.ProtoReflect.Descriptor instead.
func (*ShowDiscardCardsRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{8}
}

type ShowDiscardCardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []string               `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowDiscardCardsResponse) Reset() {
	*x = ShowDiscardCardsResponse{}
	mi := &file_pb_card_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowDiscardCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDiscardCardsResponse) ProtoMessage() {}

func (x *ShowDiscardCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDiscardCardsResponse.ProtoReflect.Descriptor instead.
func (*ShowDiscardCardsResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{9}
}

func (x *ShowDiscardCardsResponse) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ShowExhaustCardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowExhaustCardsRequest) Reset() {
	*x = ShowExhaustCardsRequest{}
	mi := &file_pb_card_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowExhaustCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExhaustCardsRequest) ProtoMessage() {}

func (x *ShowExhaustCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExhaustCardsRequest.ProtoReflect.Descriptor instead.
func (*ShowExhaustCardsRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{10}
}

type ShowExhaustCardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []string               `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowExhaustCardsResponse) Reset() {
	*x = ShowExhaustCardsResponse{}
	mi := &file_pb_card_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowExhaustCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExhaustCardsResponse) ProtoMessage() {}

func (x *ShowExhaustCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExhaustCardsResponse.ProtoReflect.Descriptor instead.
func (*ShowExhaustCardsResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{11}
}

func (x *ShowExhaustCardsResponse) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type EndTurnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       string                 `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndTurnRequest) Reset() {
	*x = EndTurnRequest{}
	mi := &file_pb_card_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndTurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndTurnRequest) ProtoMessage() {}

func (x *EndTurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndTurnRequest.ProtoReflect.Descriptor instead.
func (*EndTurnRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{12}
}

func (x *EndTurnRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

type EndTurnResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndTurnResponse) Reset() {
	*x = EndTurnResponse{}
	mi := &file_pb_card_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndTurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndTurnResponse) ProtoMessage() {}

func (x *EndTurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndTurnResponse.ProtoReflect.Descriptor instead.
func (*EndTurnResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{13}
}

func (x *EndTurnResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type NextFloorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextFloorRequest) Reset() {
	*x = NextFloorRequest{}
	mi := &file_pb_card_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextFloorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextFloorRequest) ProtoMessage() {}

func (x *NextFloorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextFloorRequest.ProtoReflect.Descriptor instead.
func (*NextFloorRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{14}
}

func (x *NextFloorRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

type NextFloorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextFloorResponse) Reset() {
	*x = NextFloorResponse{}
	mi := &file_pb_card_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextFloorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextFloorResponse) ProtoMessage() {}

func (x *NextFloorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextFloorResponse.ProtoReflect.Descriptor instead.
func (*NextFloorResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{15}
}

func (x *NextFloorResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type Bonus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bonus) Reset() {
	*x = Bonus{}
	mi := &file_pb_card_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bonus) ProtoMessage() {}

func (x *Bonus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bonus.ProtoReflect.Descriptor instead.
func (*Bonus) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{16}
}

func (x *Bonus) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Bonus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChooseBonusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bonus         []*Bonus               `protobuf:"bytes,1,rep,name=bonus,proto3" json:"bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChooseBonusRequest) Reset() {
	*x = ChooseBonusRequest{}
	mi := &file_pb_card_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChooseBonusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseBonusRequest) ProtoMessage() {}

func (x *ChooseBonusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseBonusRequest.ProtoReflect.Descriptor instead.
func (*ChooseBonusRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{17}
}

func (x *ChooseBonusRequest) GetBonus() []*Bonus {
	if x != nil {
		return x.Bonus
	}
	return nil
}

type ChooseBonusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChooseBonusResponse) Reset() {
	*x = ChooseBonusResponse{}
	mi := &file_pb_card_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChooseBonusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseBonusResponse) ProtoMessage() {}

func (x *ChooseBonusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseBonusResponse.ProtoReflect.Descriptor instead.
func (*ChooseBonusResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{18}
}

func (x *ChooseBonusResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type UsePotionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsePotionRequest) Reset() {
	*x = UsePotionRequest{}
	mi := &file_pb_card_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsePotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePotionRequest) ProtoMessage() {}

func (x *UsePotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePotionRequest.ProtoReflect.Descriptor instead.
func (*UsePotionRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{19}
}

func (x *UsePotionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UsePotionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsePotionResponse) Reset() {
	*x = UsePotionResponse{}
	mi := &file_pb_card_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsePotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePotionResponse) ProtoMessage() {}

func (x *UsePotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePotionResponse.ProtoReflect.Descriptor instead.
func (*UsePotionResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{20}
}

func (x *UsePotionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DiscardPotionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscardPotionRequest) Reset() {
	*x = DiscardPotionRequest{}
	mi := &file_pb_card_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscardPotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardPotionRequest) ProtoMessage() {}

func (x *DiscardPotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardPotionRequest.ProtoReflect.Descriptor instead.
func (*DiscardPotionRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{21}
}

func (x *DiscardPotionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DiscardPotionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscardPotionResponse) Reset() {
	*x = DiscardPotionResponse{}
	mi := &file_pb_card_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscardPotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardPotionResponse) ProtoMessage() {}

func (x *DiscardPotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardPotionResponse.ProtoReflect.Descriptor instead.
func (*DiscardPotionResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{22}
}

func (x *DiscardPotionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type BuyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyRequest) Reset() {
	*x = BuyRequest{}
	mi := &file_pb_card_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRequest) ProtoMessage() {}

func (x *BuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRequest.ProtoReflect.Descriptor instead.
func (*BuyRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{23}
}

func (x *BuyRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BuyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BuyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	mi := &file_pb_card_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{24}
}

func (x *BuyResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BuyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CanUseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Card          int32                  `protobuf:"varint,1,opt,name=card,proto3" json:"card,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanUseRequest) Reset() {
	*x = CanUseRequest{}
	mi := &file_pb_card_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanUseRequest) ProtoMessage() {}

func (x *CanUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanUseRequest.ProtoReflect.Descriptor instead.
func (*CanUseRequest) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{25}
}

func (x *CanUseRequest) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

type CanUseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanUseResponse) Reset() {
	*x = CanUseResponse{}
	mi := &file_pb_card_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanUseResponse) ProtoMessage() {}

func (x *CanUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_card_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanUseResponse.ProtoReflect.Descriptor instead.
func (*CanUseResponse) Descriptor() ([]byte, []int) {
	return file_pb_card_proto_rawDescGZIP(), []int{26}
}

func (x *CanUseResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_pb_card_proto protoreflect.FileDescriptor

const file_pb_card_proto_rawDesc = "" +
	"\n" +
	"\rpb/card.proto\x12\x02pb\"&\n" +
	"\x0ewelcomeRequest\x12\x14\n" +
	"\x05event\x18\x01 \x01(\tR\x05event\")\n" +
	"\x0fwelcomeResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"?\n" +
	"\x0fsendCardRequest\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\x05R\x05cards\x12\x16\n" +
	"\x06target\x18\x02 \x01(\x05R\x06target\"*\n" +
	"\x10sendCardResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"*\n" +
	"\x12discardCardRequest\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\x05R\x05cards\"-\n" +
	"\x13discardCardResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"\x16\n" +
	"\x14showDrawCardsRequest\"-\n" +
	"\x15showDrawCardsResponse\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\tR\x05cards\"\x19\n" +
	"\x17showDiscardCardsRequest\"0\n" +
	"\x18showDiscardCardsResponse\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\tR\x05cards\"\x19\n" +
	"\x17showExhaustCardsRequest\"0\n" +
	"\x18showExhaustCardsResponse\x12\x14\n" +
	"\x05cards\x18\x01 \x03(\tR\x05cards\"*\n" +
	"\x0eendTurnRequest\x12\x18\n" +
	"\arequest\x18\x01 \x01(\tR\arequest\")\n" +
	"\x0fendTurnResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"&\n" +
	"\x10nextFloorRequest\x12\x12\n" +
	"\x04room\x18\x01 \x01(\x05R\x04room\"+\n" +
	"\x11nextFloorResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"/\n" +
	"\x05Bonus\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"5\n" +
	"\x12chooseBonusRequest\x12\x1f\n" +
	"\x05bonus\x18\x01 \x03(\v2\t.pb.BonusR\x05bonus\"-\n" +
	"\x13chooseBonusResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"&\n" +
	"\x10usePotionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"+\n" +
	"\x11usePotionResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"*\n" +
	"\x14discardPotionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"/\n" +
	"\x15discardPotionResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"4\n" +
	"\n" +
	"buyRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"5\n" +
	"\vbuyResponse\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"#\n" +
	"\rcanUseRequest\x12\x12\n" +
	"\x04card\x18\x01 \x01(\x05R\x04card\"(\n" +
	"\x0ecanUseResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result2\xa0\x06\n" +
	"\x04card\x122\n" +
	"\awelcome\x12\x12.pb.welcomeRequest\x1a\x13.pb.welcomeResponse\x123\n" +
	"\n" +
	"canUseCard\x12\x11.pb.canUseRequest\x1a\x12.pb.canUseResponse\x125\n" +
	"\bsendCard\x12\x13.pb.sendCardRequest\x1a\x14.pb.sendCardResponse\x12>\n" +
	"\vdiscardCard\x12\x16.pb.discardCardRequest\x1a\x17.pb.discardCardResponse\x12D\n" +
	"\rshowDrawCards\x12\x18.pb.showDrawCardsRequest\x1a\x19.pb.showDrawCardsResponse\x12M\n" +
	"\x10showDiscardCards\x12\x1b.pb.showDiscardCardsRequest\x1a\x1c.pb.showDiscardCardsResponse\x12M\n" +
	"\x10showExhaustCards\x12\x1b.pb.showExhaustCardsRequest\x1a\x1c.pb.showExhaustCardsResponse\x122\n" +
	"\aendTurn\x12\x12.pb.endTurnRequest\x1a\x13.pb.endTurnResponse\x128\n" +
	"\tnextFloor\x12\x14.pb.nextFloorRequest\x1a\x15.pb.nextFloorResponse\x12>\n" +
	"\vchooseBonus\x12\x16.pb.chooseBonusRequest\x1a\x17.pb.chooseBonusResponse\x128\n" +
	"\tusePotion\x12\x14.pb.usePotionRequest\x1a\x15.pb.usePotionResponse\x12D\n" +
	"\rdiscardPotion\x12\x18.pb.discardPotionRequest\x1a\x19.pb.discardPotionResponse\x12&\n" +
	"\x03buy\x12\x0e.pb.buyRequest\x1a\x0f.pb.buyResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_pb_card_proto_rawDescOnce sync.Once
	file_pb_card_proto_rawDescData []byte
)

func file_pb_card_proto_rawDescGZIP() []byte {
	file_pb_card_proto_rawDescOnce.Do(func() {
		file_pb_card_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_card_proto_rawDesc), len(file_pb_card_proto_rawDesc)))
	})
	return file_pb_card_proto_rawDescData
}

var file_pb_card_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_pb_card_proto_goTypes = []any{
	(*WelcomeRequest)(nil),           // 0: pb.welcomeRequest
	(*WelcomeResponse)(nil),          // 1: pb.welcomeResponse
	(*SendCardRequest)(nil),          // 2: pb.sendCardRequest
	(*SendCardResponse)(nil),         // 3: pb.sendCardResponse
	(*DiscardCardRequest)(nil),       // 4: pb.discardCardRequest
	(*DiscardCardResponse)(nil),      // 5: pb.discardCardResponse
	(*ShowDrawCardsRequest)(nil),     // 6: pb.showDrawCardsRequest
	(*ShowDrawCardsResponse)(nil),    // 7: pb.showDrawCardsResponse
	(*ShowDiscardCardsRequest)(nil),  // 8: pb.showDiscardCardsRequest
	(*ShowDiscardCardsResponse)(nil), // 9: pb.showDiscardCardsResponse
	(*ShowExhaustCardsRequest)(nil),  // 10: pb.showExhaustCardsRequest
	(*ShowExhaustCardsResponse)(nil), // 11: pb.showExhaustCardsResponse
	(*EndTurnRequest)(nil),           // 12: pb.endTurnRequest
	(*EndTurnResponse)(nil),          // 13: pb.endTurnResponse
	(*NextFloorRequest)(nil),         // 14: pb.nextFloorRequest
	(*NextFloorResponse)(nil),        // 15: pb.nextFloorResponse
	(*Bonus)(nil),                    // 16: pb.Bonus
	(*ChooseBonusRequest)(nil),       // 17: pb.chooseBonusRequest
	(*ChooseBonusResponse)(nil),      // 18: pb.chooseBonusResponse
	(*UsePotionRequest)(nil),         // 19: pb.usePotionRequest
	(*UsePotionResponse)(nil),        // 20: pb.usePotionResponse
	(*DiscardPotionRequest)(nil),     // 21: pb.discardPotionRequest
	(*DiscardPotionResponse)(nil),    // 22: pb.discardPotionResponse
	(*BuyRequest)(nil),               // 23: pb.buyRequest
	(*BuyResponse)(nil),              // 24: pb.buyResponse
	(*CanUseRequest)(nil),            // 25: pb.canUseRequest
	(*CanUseResponse)(nil),           // 26: pb.canUseResponse
}
var file_pb_card_proto_depIdxs = []int32{
	16, // 0: pb.chooseBonusRequest.bonus:type_name -> pb.Bonus
	0,  // 1: pb.card.welcome:input_type -> pb.welcomeRequest
	25, // 2: pb.card.canUseCard:input_type -> pb.canUseRequest
	2,  // 3: pb.card.sendCard:input_type -> pb.sendCardRequest
	4,  // 4: pb.card.discardCard:input_type -> pb.discardCardRequest
	6,  // 5: pb.card.showDrawCards:input_type -> pb.showDrawCardsRequest
	8,  // 6: pb.card.showDiscardCards:input_type -> pb.showDiscardCardsRequest
	10, // 7: pb.card.showExhaustCards:input_type -> pb.showExhaustCardsRequest
	12, // 8: pb.card.endTurn:input_type -> pb.endTurnRequest
	14, // 9: pb.card.nextFloor:input_type -> pb.nextFloorRequest
	17, // 10: pb.card.chooseBonus:input_type -> pb.chooseBonusRequest
	19, // 11: pb.card.usePotion:input_type -> pb.usePotionRequest
	21, // 12: pb.card.discardPotion:input_type -> pb.discardPotionRequest
	23, // 13: pb.card.buy:input_type -> pb.buyRequest
	1,  // 14: pb.card.welcome:output_type -> pb.welcomeResponse
	26, // 15: pb.card.canUseCard:output_type -> pb.canUseResponse
	3,  // 16: pb.card.sendCard:output_type -> pb.sendCardResponse
	5,  // 17: pb.card.discardCard:output_type -> pb.discardCardResponse
	7,  // 18: pb.card.showDrawCards:output_type -> pb.showDrawCardsResponse
	9,  // 19: pb.card.showDiscardCards:output_type -> pb.showDiscardCardsResponse
	11, // 20: pb.card.showExhaustCards:output_type -> pb.showExhaustCardsResponse
	13, // 21: pb.card.endTurn:output_type -> pb.endTurnResponse
	15, // 22: pb.card.nextFloor:output_type -> pb.nextFloorResponse
	18, // 23: pb.card.chooseBonus:output_type -> pb.chooseBonusResponse
	20, // 24: pb.card.usePotion:output_type -> pb.usePotionResponse
	22, // 25: pb.card.discardPotion:output_type -> pb.discardPotionResponse
	24, // 26: pb.card.buy:output_type -> pb.buyResponse
	14, // [14:27] is the sub-list for method output_type
	1,  // [1:14] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pb_card_proto_init() }
func file_pb_card_proto_init() {
	if File_pb_card_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_card_proto_rawDesc), len(file_pb_card_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_card_proto_goTypes,
		DependencyIndexes: file_pb_card_proto_depIdxs,
		MessageInfos:      file_pb_card_proto_msgTypes,
	}.Build()
	File_pb_card_proto = out.File
	file_pb_card_proto_goTypes = nil
	file_pb_card_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CardClient is the client API for Card service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardClient interface {
	Welcome(ctx context.Context, in *WelcomeRequest, opts ...grpc.CallOption) (*WelcomeResponse, error)
	CanUseCard(ctx context.Context, in *CanUseRequest, opts ...grpc.CallOption) (*CanUseResponse, error)
	SendCard(ctx context.Context, in *SendCardRequest, opts ...grpc.CallOption) (*SendCardResponse, error)
	DiscardCard(ctx context.Context, in *DiscardCardRequest, opts ...grpc.CallOption) (*DiscardCardResponse, error)
	ShowDrawCards(ctx context.Context, in *ShowDrawCardsRequest, opts ...grpc.CallOption) (*ShowDrawCardsResponse, error)
	ShowDiscardCards(ctx context.Context, in *ShowDiscardCardsRequest, opts ...grpc.CallOption) (*ShowDiscardCardsResponse, error)
	ShowExhaustCards(ctx context.Context, in *ShowExhaustCardsRequest, opts ...grpc.CallOption) (*ShowExhaustCardsResponse, error)
	EndTurn(ctx context.Context, in *EndTurnRequest, opts ...grpc.CallOption) (*EndTurnResponse, error)
	NextFloor(ctx context.Context, in *NextFloorRequest, opts ...grpc.CallOption) (*NextFloorResponse, error)
	ChooseBonus(ctx context.Context, in *ChooseBonusRequest, opts ...grpc.CallOption) (*ChooseBonusResponse, error)
	UsePotion(ctx context.Context, in *UsePotionRequest, opts ...grpc.CallOption) (*UsePotionResponse, error)
	DiscardPotion(ctx context.Context, in *DiscardPotionRequest, opts ...grpc.CallOption) (*DiscardPotionResponse, error)
	Buy(ctx context.Context, in *BuyRequest, opts ...grpc.CallOption) (*BuyResponse, error)
}

type cardClient struct {
	cc grpc.ClientConnInterface
}

func NewCardClient(cc grpc.ClientConnInterface) CardClient {
	return &cardClient{cc}
}

func (c *cardClient) Welcome(ctx context.Context, in *WelcomeRequest, opts ...grpc.CallOption) (*WelcomeResponse, error) {
	out := new(WelcomeResponse)
	err := c.cc.Invoke(ctx, "/pb.card/welcome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) CanUseCard(ctx context.Context, in *CanUseRequest, opts ...grpc.CallOption) (*CanUseResponse, error) {
	out := new(CanUseResponse)
	err := c.cc.Invoke(ctx, "/pb.card/canUseCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) SendCard(ctx context.Context, in *SendCardRequest, opts ...grpc.CallOption) (*SendCardResponse, error) {
	out := new(SendCardResponse)
	err := c.cc.Invoke(ctx, "/pb.card/sendCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) DiscardCard(ctx context.Context, in *DiscardCardRequest, opts ...grpc.CallOption) (*DiscardCardResponse, error) {
	out := new(DiscardCardResponse)
	err := c.cc.Invoke(ctx, "/pb.card/discardCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) ShowDrawCards(ctx context.Context, in *ShowDrawCardsRequest, opts ...grpc.CallOption) (*ShowDrawCardsResponse, error) {
	out := new(ShowDrawCardsResponse)
	err := c.cc.Invoke(ctx, "/pb.card/showDrawCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) ShowDiscardCards(ctx context.Context, in *ShowDiscardCardsRequest, opts ...grpc.CallOption) (*ShowDiscardCardsResponse, error) {
	out := new(ShowDiscardCardsResponse)
	err := c.cc.Invoke(ctx, "/pb.card/showDiscardCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) ShowExhaustCards(ctx context.Context, in *ShowExhaustCardsRequest, opts ...grpc.CallOption) (*ShowExhaustCardsResponse, error) {
	out := new(ShowExhaustCardsResponse)
	err := c.cc.Invoke(ctx, "/pb.card/showExhaustCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) EndTurn(ctx context.Context, in *EndTurnRequest, opts ...grpc.CallOption) (*EndTurnResponse, error) {
	out := new(EndTurnResponse)
	err := c.cc.Invoke(ctx, "/pb.card/endTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) NextFloor(ctx context.Context, in *NextFloorRequest, opts ...grpc.CallOption) (*NextFloorResponse, error) {
	out := new(NextFloorResponse)
	err := c.cc.Invoke(ctx, "/pb.card/nextFloor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) ChooseBonus(ctx context.Context, in *ChooseBonusRequest, opts ...grpc.CallOption) (*ChooseBonusResponse, error) {
	out := new(ChooseBonusResponse)
	err := c.cc.Invoke(ctx, "/pb.card/chooseBonus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) UsePotion(ctx context.Context, in *UsePotionRequest, opts ...grpc.CallOption) (*UsePotionResponse, error) {
	out := new(UsePotionResponse)
	err := c.cc.Invoke(ctx, "/pb.card/usePotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) DiscardPotion(ctx context.Context, in *DiscardPotionRequest, opts ...grpc.CallOption) (*DiscardPotionResponse, error) {
	out := new(DiscardPotionResponse)
	err := c.cc.Invoke(ctx, "/pb.card/discardPotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) Buy(ctx context.Context, in *BuyRequest, opts ...grpc.CallOption) (*BuyResponse, error) {
	out := new(BuyResponse)
	err := c.cc.Invoke(ctx, "/pb.card/buy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardServer is the server API for Card service.
type CardServer interface {
	Welcome(context.Context, *WelcomeRequest) (*WelcomeResponse, error)
	CanUseCard(context.Context, *CanUseRequest) (*CanUseResponse, error)
	SendCard(context.Context, *SendCardRequest) (*SendCardResponse, error)
	DiscardCard(context.Context, *DiscardCardRequest) (*DiscardCardResponse, error)
	ShowDrawCards(context.Context, *ShowDrawCardsRequest) (*ShowDrawCardsResponse, error)
	ShowDiscardCards(context.Context, *ShowDiscardCardsRequest) (*ShowDiscardCardsResponse, error)
	ShowExhaustCards(context.Context, *ShowExhaustCardsRequest) (*ShowExhaustCardsResponse, error)
	EndTurn(context.Context, *EndTurnRequest) (*EndTurnResponse, error)
	NextFloor(context.Context, *NextFloorRequest) (*NextFloorResponse, error)
	ChooseBonus(context.Context, *ChooseBonusRequest) (*ChooseBonusResponse, error)
	UsePotion(context.Context, *UsePotionRequest) (*UsePotionResponse, error)
	DiscardPotion(context.Context, *DiscardPotionRequest) (*DiscardPotionResponse, error)
	Buy(context.Context, *BuyRequest) (*BuyResponse, error)
}

// UnimplementedCardServer can be embedded to have forward compatible implementations.
type UnimplementedCardServer struct {
}

func (*UnimplementedCardServer) Welcome(context.Context, *WelcomeRequest) (*WelcomeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Welcome not implemented")
}
func (*UnimplementedCardServer) CanUseCard(context.Context, *CanUseRequest) (*CanUseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanUseCard not implemented")
}
func (*UnimplementedCardServer) SendCard(context.Context, *SendCardRequest) (*SendCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCard not implemented")
}
func (*UnimplementedCardServer) DiscardCard(context.Context, *DiscardCardRequest) (*DiscardCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardCard not implemented")
}
func (*UnimplementedCardServer) ShowDrawCards(context.Context, *ShowDrawCardsRequest) (*ShowDrawCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowDrawCards not implemented")
}
func (*UnimplementedCardServer) ShowDiscardCards(context.Context, *ShowDiscardCardsRequest) (*ShowDiscardCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowDiscardCards not implemented")
}
func (*UnimplementedCardServer) ShowExhaustCards(context.Context, *ShowExhaustCardsRequest) (*ShowExhaustCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowExhaustCards not implemented")
}
func (*UnimplementedCardServer) EndTurn(context.Context, *EndTurnRequest) (*EndTurnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndTurn not implemented")
}
func (*UnimplementedCardServer) NextFloor(context.Context, *NextFloorRequest) (*NextFloorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextFloor not implemented")
}
func (*UnimplementedCardServer) ChooseBonus(context.Context, *ChooseBonusRequest) (*ChooseBonusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChooseBonus not implemented")
}
func (*UnimplementedCardServer) UsePotion(context.Context, *UsePotionRequest) (*UsePotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsePotion not implemented")
}
func (*UnimplementedCardServer) DiscardPotion(context.Context, *DiscardPotionRequest) (*DiscardPotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardPotion not implemented")
}
func (*UnimplementedCardServer) Buy(context.Context, *BuyRequest) (*BuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Buy not implemented")
}

func RegisterCardServer(s *grpc.Server, srv CardServer) {
	s.RegisterService(&_Card_serviceDesc, srv)
}

func _Card_Welcome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).Welcome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/Welcome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).Welcome(ctx, req.(*WelcomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_CanUseCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanUseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).CanUseCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/CanUseCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).CanUseCard(ctx, req.(*CanUseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_SendCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).SendCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/SendCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).SendCard(ctx, req.(*SendCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_DiscardCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).DiscardCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/DiscardCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).DiscardCard(ctx, req.(*DiscardCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_ShowDrawCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowDrawCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).ShowDrawCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/ShowDrawCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).ShowDrawCards(ctx, req.(*ShowDrawCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_ShowDiscardCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowDiscardCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).ShowDiscardCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/ShowDiscardCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).ShowDiscardCards(ctx, req.(*ShowDiscardCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_ShowExhaustCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowExhaustCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).ShowExhaustCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/ShowExhaustCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).ShowExhaustCards(ctx, req.(*ShowExhaustCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_EndTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndTurnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).EndTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/EndTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).EndTurn(ctx, req.(*EndTurnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_NextFloor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextFloorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).NextFloor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/NextFloor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).NextFloor(ctx, req.(*NextFloorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_ChooseBonus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChooseBonusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).ChooseBonus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/ChooseBonus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).ChooseBonus(ctx, req.(*ChooseBonusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_UsePotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsePotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).UsePotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/UsePotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).UsePotion(ctx, req.(*UsePotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_DiscardPotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardPotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).DiscardPotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/DiscardPotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).DiscardPotion(ctx, req.(*DiscardPotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_Buy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).Buy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.card/Buy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).Buy(ctx, req.(*BuyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Card_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.card",
	HandlerType: (*CardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "welcome",
			Handler:    _Card_Welcome_Handler,
		},
		{
			MethodName: "canUseCard",
			Handler:    _Card_CanUseCard_Handler,
		},
		{
			MethodName: "sendCard",
			Handler:    _Card_SendCard_Handler,
		},
		{
			MethodName: "discardCard",
			Handler:    _Card_DiscardCard_Handler,
		},
		{
			MethodName: "showDrawCards",
			Handler:    _Card_ShowDrawCards_Handler,
		},
		{
			MethodName: "showDiscardCards",
			Handler:    _Card_ShowDiscardCards_Handler,
		},
		{
			MethodName: "showExhaustCards",
			Handler:    _Card_ShowExhaustCards_Handler,
		},
		{
			MethodName: "endTurn",
			Handler:    _Card_EndTurn_Handler,
		},
		{
			MethodName: "nextFloor",
			Handler:    _Card_NextFloor_Handler,
		},
		{
			MethodName: "chooseBonus",
			Handler:    _Card_ChooseBonus_Handler,
		},
		{
			MethodName: "usePotion",
			Handler:    _Card_UsePotion_Handler,
		},
		{
			MethodName: "discardPotion",
			Handler:    _Card_DiscardPotion_Handler,
		},
		{
			MethodName: "buy",
			Handler:    _Card_Buy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/card.proto",
}
